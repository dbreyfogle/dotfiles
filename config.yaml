alacritty:
  dependencies:
    - fonts
  symlink: $HOME/.config/alacritty
  install:
    fedora: sudo dnf install -y alacritty
    macos: brew install --cask alacritty
    ubuntu: sudo apt install -y alacritty

ansible:
  install:
    fedora: sudo dnf install -y ansible
    macos: brew install ansible
    ubuntu: sudo apt install -y ansible

asciinema:
  install:
    fedora: |
      sudo dnf install -y asciinema
      curl -Lk https://github.com/asciinema/agg/releases/latest/download/agg-x86_64-unknown-linux-gnu -o agg
      chmod a+x agg && sudo mv agg /usr/local/bin
    macos: brew install asciinema agg
    ubuntu: |
      sudo apt install -y asciinema
      curl -Lk https://github.com/asciinema/agg/releases/latest/download/agg-x86_64-unknown-linux-gnu -o agg
      chmod a+x agg && sudo mv agg /usr/local/bin

aws:
  install:
    fedora: sudo dnf install -y awscli
    macos: brew install awscli
    ubuntu: |
      sudo apt install -y unzip
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
      unzip /tmp/awscliv2.zip -d /tmp
      sudo /tmp/aws/install

bin:
  symlink: $HOME
  scope: directory

direnv:
  install:
    fedora: sudo dnf install -y direnv
    macos: brew install direnv
    ubuntu: sudo apt install -y direnv

docker:
  install:
    fedora: |
      sudo dnf config-manager addrepo --from-repofile=https://download.docker.com/linux/fedora/docker-ce.repo
      sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      sudo groupadd -f docker
      sudo usermod -aG docker $USER
      sudo systemctl enable docker.service
      sudo systemctl enable containerd.service
      sudo dnf install -y hadolint
    macos: brew install --cask docker && brew install hadolint
    ubuntu: |
      curl -fsSL https://get.docker.com | sudo sh
      sudo groupadd -f docker
      sudo usermod -aG docker $USER
      sudo systemctl enable docker.service
      sudo systemctl enable containerd.service
      curl -Lk https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o hadolint
      chmod a+x hadolint && sudo mv hadolint /usr/local/bin

fonts:
  env:
    - FONT_DIR: $HOME/.local/share/fonts
  install:
    fedora: |
      sudo dnf install -y fontconfig
      mkdir -p "$FONT_DIR/FiraCode"
      curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.tar.xz
      tar -xf FiraCode.tar.xz -C "$FONT_DIR/FiraCode" && rm FiraCode.tar.xz
      fc-cache -fv
    macos: |
      curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.tar.xz
      tar -xf FiraCode.tar.xz -C "$HOME/Library/Fonts" && rm FiraCode.tar.xz
    ubuntu: |
      sudo apt install -y fontconfig
      mkdir -p "$FONT_DIR/FiraCode"
      curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.tar.xz
      tar -xf FiraCode.tar.xz -C "$FONT_DIR/FiraCode" && rm FiraCode.tar.xz
      fc-cache -fv

fzf:
  install:
    fedora: sudo dnf install -y fzf
    macos: brew install fzf
    ubuntu: sudo apt install -y fzf

git:
  install:
    fedora: sudo dnf install -y git gh glab git-filter-repo
    macos: brew install git gh glab git-filter-repo
    ubuntu: sudo apt install -y git gh glab git-filter-repo
  setup: |
    git config --global init.defaultBranch main
    git config --global push.autoSetupRemote true
    git config --global alias.graph "log --graph --oneline --decorate --all"

go:
  install:
    fedora: sudo dnf install -y golang
    macos: brew install go
    ubuntu: sudo apt install -y golang

k8s:
  dependencies:
    - docker
  install:
    fedora: |
      cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key
      EOF
      sudo dnf install -y kubectl helm
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
    macos: brew install kubernetes-cli helm minikube
    ubuntu: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && rm kubectl
      curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
  setup: echo 'export MINIKUBE_IN_STYLE=false' >> "$HOME/.zprofile"

k9s:
  dependencies:
    - k8s
  symlink: $HOME/.config/k9s
  install:
    fedora: |
      curl -Lk https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz | tar -xzf - -C /tmp k9s
      chmod a+x /tmp/k9s && sudo mv /tmp/k9s /usr/local/bin
    macos: brew install derailed/k9s/k9s
    ubuntu: |
      curl -Lk https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_amd64.tar.gz | tar -xzf - -C /tmp k9s
      chmod a+x /tmp/k9s && sudo mv /tmp/k9s /usr/local/bin
  setup: echo 'export K9S_CONFIG_DIR="$HOME/.config/k9s"' >> "$HOME/.zprofile"

node:
  install:
    fedora: sudo dnf install -y nodejs
    macos: brew install node
    ubuntu: sudo apt install -y nodejs npm

nvim:
  dependencies:
    - fonts
    - node
    - vale
  symlink: $HOME/.config
  scope: directory
  install:
    fedora: sudo dnf install -y neovim ripgrep unzip
    macos: brew install neovim ripgrep
    ubuntu: sudo apt install -y neovim ripgrep unzip

pipx:
  install:
    fedora: sudo dnf install -y pipx
    macos: brew install pipx
    ubuntu: sudo apt install -y pipx
  setup: pipx install poetry

pyenv:
  install:
    fedora: |
      sudo dnf install -y make gcc patch zlib-devel bzip2 bzip2-devel \
        readline-devel sqlite sqlite-devel openssl-devel tk-devel libffi-devel \
        xz-devel libuuid-devel gdbm-libs libnsl2
      curl https://pyenv.run | bash
    macos: |
      xcode-select --install
      brew install openssl readline sqlite3 xz zlib tcl-tk
      brew install pyenv pyenv-virtualenv
    ubuntu: |
      sudo apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev curl git libncursesw5-dev xz-utils tk-dev \
        libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
      curl https://pyenv.run | bash

starship:
  dependencies:
    - fonts
  symlink: $HOME/.config
  install:
    fedora: curl -sS https://starship.rs/install.sh | sh -s -- --yes
    macos: brew install starship
    ubuntu: curl -sS https://starship.rs/install.sh | sh -s -- --yes

terraform:
  install:
    fedora: |
      sudo dnf config-manager addrepo --from-repofile=https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
      sudo dnf install -y terraform
    macos: |
      brew tap hashicorp/tap
      brew install hashicorp/tap/terraform
    ubuntu: |
      sudo apt install -y wget
      wget -O - https://apt.releases.hashicorp.com/gpg | \
        sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
      echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
        https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list
      sudo apt update -y && sudo apt install -y terraform

tldr:
  install:
    fedora: sudo dnf install -y tldr
    macos: brew install tldr
    ubuntu: sudo apt install -y tldr
  setup: tldr --update

tmux:
  symlink: $HOME
  env:
    - TMUX_PLUGIN_DIR: $HOME/.tmux/plugins/tpm
  install:
    fedora: sudo dnf install -y tmux
    macos: brew install tmux
    ubuntu: sudo apt install -y tmux
  setup: git clone https://github.com/tmux-plugins/tpm "$TMUX_PLUGIN_DIR"
  post_setup: "$TMUX_PLUGIN_DIR/bin/install_plugins"

vale:
  symlink: $HOME/.config/vale
  setup: echo 'export VALE_CONFIG_PATH="$HOME/.config/vale/.vale.ini"' >> "$HOME/.zprofile"

vim:
  symlink: $HOME
  install:
    fedora: sudo dnf install -y vimx && sudo ln -s vimx /bin/vim
    macos: brew install vim
    ubuntu: sudo apt install -y vim-gtk3

zsh:
  dependencies:
    - starship
  symlink: $HOME
  env:
    - OH_MY_ZSH_CUSTOM: $HOME/.oh-my-zsh/custom
  install:
    fedora: sudo dnf install -y zsh
    macos: |
      brew install coreutils
      sudo ln -sf /opt/homebrew/opt/coreutils/bin/gls /usr/local/bin/ls
    ubuntu: sudo apt install -y zsh
  setup: |
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    git clone https://github.com/TamCore/autoupdate-oh-my-zsh-plugins "${OH_MY_ZSH_CUSTOM}/plugins/autoupdate"
    git clone https://github.com/zsh-users/zsh-autosuggestions "${OH_MY_ZSH_CUSTOM}/plugins/zsh-autosuggestions"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "${OH_MY_ZSH_CUSTOM}/plugins/zsh-syntax-highlighting"
